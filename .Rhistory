install.packages("swirl")
library(swirl)
swirl()
swirl()
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z, 555, z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
5.7
5+7
x<-5+7
x
y<-x-3
y
c(1.1,9,3.14)
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args(list.files)
old.dir<-getwd()
dir.creat(testdir)
dir.create(testdir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
dir("mytest.R")
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
?file.path
file.path("folder1","folder2")
?dir.create
dir.create("testdir2/testdir3", recursive=TRUE)
dir.create(file.path("testdir2","/testdir3"), recursive=TRUE)
dir.remove testdir2
dir.remove ("testdir2")
unlink("testdir2")
dir.create(file.path("testdir2","/testdir3"), recursive=TRUE)
dir.create(file.path("testdir2","/testdir3"), recursive=TRUE)
info()
nxt()
dir.create(file.path("testdir2","/testdir3"), recursive=TRUE)
dir.create(file.path('testdir2','/testdir3'), recursive = TRUE)
info()
skip()
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
play()
getwd()
next()
nxt()
unlink("testdir", recursive=TRUE)
swirl()
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq<-seq(5,10,length=30)
length("my_seq")
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each = 10)
q()
swirl()
swirl()
library(swirl)
swirl()
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
bye()
swirl()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Benj")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("X","Y","Z",sep=""))
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS, 1:4, sep = "-")
x <- list(foo = 1:4, bar = 0.6)
x$foo[[1]]
x[1][[1]]
x <- list(foo = 1:4, bar = c(0.6,0.4,0.2,0.8))
x[2]
class(x[2])
class(x[[2])
class(x[[2]])
x <- list(foo = 1:4, bar = 0.6)
class(x[2])
class(x[[2]])
x[[2]]
x <- list(foo = 1:4, bar = c(0.6,0.4,0.2,0.8))
x[[2]]
y <- list(x,z=200)
y
y[1]
y[1][1]
y[[1]][1]
y[[1]][[1]]
y[[1]][[1]][1]
library(swirl)
swirl()
5+7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555)
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4)+c(0,10,100)
c(1,2,3,4)+c(0,10,1000)
z * 2 + 1000
my_div
swirl()
library(swirl)
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(mean(by_package,size))
mean(summarize(by_package),size)
summarize(by_package,mean(size))
submit()
pack_sum()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
arrange(top_counts, order_by(count(),decending = TRUE))
arrange(top_counts, order_by(count(),decending)
()
)
arrange(top_counts, order_by(count(),sort()))
?arrange
arrange(top_counts,desc(count))
top_counts_sorted <- arrange(top_counts, desc(count)
)
view(top_counts_sorted)
View(top_counts_sorted)
quantile(pack_sum$unique,prob=0)
quantile(pack_sum$unique,prob=0.99)
top_unique <- filter(pack_sum$unique, unique>465)
top_unique <- quantile(pack_sum$unique,prob=0.99, filter(unique >465))
top_unique <- filter(pack_sum, unique>465)
view(top_unique)
View(top_unique)
top_unique_sorted) <- arrange(top_unique, unique
top_unique_sorted) <- arrange(top_unique, unique)
top_unique_sorted) <- arrange(top_unique, order_by(unique)
top_unique_sorted) <- arrange(top_unique, order_by(unique))
top_unique_sorted) <- arrange(top_unique$unique)
top_unique_sorted) <- arrange(top_unique, asc(unique))
top_unique_sorted) <- arrange(top_unique, desc(unique))
top_unique_sorted <- arrange(top_unique, asc(unique))
top_unique_sorted <- arrange(top_unique, ascd(unique))
top_unique_sorted <- arrange(top_unique, desc(unique))
view(top_counts_sorted)
View(top_counts_sorted)
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
reset()
?mutate
submit()
submit()
submit()
submit()
submit()
swirl()
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
play()
gather(students,sexy,count,-grade)
gather(students,sex)
gather(students,count,sex)
gather(students,a,b,c)
gather(students,a,b,-grade)
next()
next
continue
?
play
nxt()
students2
res<-gather(students2,sex_class,count)
res<-gather(students2,sex_class,count-grade)
res<-gather(students2,sex_class,count,-grade)
res
?separate
res %>% separate(sex_class, c("sex", "class"))
separate(res, sex_class, c("sex", "class"))
submit()
submit()
submit()
students3
play()
gather(students3,a,b,-name)
gather(students3,a,b,c,-name)
gather(students3,a,b,c,d,-name)
gather(students3,a,b,c,d)
gather(students3,a,b,c)
gather(students3,a,b)
gather(students3,a,b,-name)
gather(students3,a,b,c,-name)
gather(students3,a,b,-name,-test)
gather(students3,a,b,-name,-test,na.rm = TRUE)
?gather
gather(students3,a,b,class1:class5,na.rm = TRUE)
gather(students3,class,grade,class1:class5,na.rm = TRUE)
nxt()
submit()
play()
gather(students3,class,grade,class1:class5,na.rm = TRUE)
students3 %>% gather(class,grade,class1:class5,na.rm = TRUE)
nxt()
submit()
?spread
play()
students3 %>% gather(class,grade,class1:class5,na.rm = TRUE) %>% spread(class,classnumber)
students3 %>% gather(class,grade,class1:class5,na.rm = TRUE) %>% spread(class)
students3 %>% gather(class,grade,class1:class5,na.rm = TRUE) %>% spread(class,number)
students3 %>% gather(class,grade,class1:class5,na.rm = TRUE) %>% spread(class,class)
students3 %>% gather(class,grade,class1:class5,na.rm = TRUE)
students3 %>% gather(class,grade,class1:class5,na.rm = TRUE) %>% spread(class,grade)
nxt()
submit()
play()
students3 %>% gather(class,grade,class1:class5,na.rm = TRUE) %>% spread(grade,class)
students3 %>% gather(class,grade,class1:class5,na.rm = TRUE) %>% spread(class,grade)
students3 %>% gather(class,grade,-name,-class,na.rm = TRUE) %>% spread(class,grade)
students3 %>% gather(class,grade,-name,-test,na.rm = TRUE) %>% spread(class,grade)
nxt()
submit()
submit()
reset()
play()
students3 %>% gather(class,grade,-name,-test,na.rm = TRUE) %>% spread(midterm,final)
students3 %>% gather(class,grade,-name,-test,na.rm = TRUE) %>% spread(test,)
students3 %>% gather(class,grade,-name,-test,na.rm = TRUE) %>% spread(test,name)
students3 %>% gather(class,grade,-name,-test,na.rm = TRUE) %>% spread(test,grade)
nxt()
submit()
extract_numeric("class5")
play()
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, grade) %>%
mutate()
?mutate
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, grade) %>% mutate(class = extract_numeric(class))
nxt()
submit()
submit()
students4
submit()
submit()
submit()
passed
failed
play()
mutate(passes,status = passed)
mutate(passed,status = passed)
mutate(passed,status = "passed")
nxt()
passed <- mutate(passed,status = "passed")
failed <- mutate(failed,status = "failed")
bind_rows(passed,failed)
sat
play()
select(sat,-contains("total"))
sat %>% select(-contains("total")) %>% gather(part_sex, count,-score_range)
sat %>% select(-contains("total")) %>% gather(part_sex, count,-score_range) %>% separate(part_sex, c("part", "sex"))
nxt()
submit()
play()
sat %>%
select(-contains("total")) %>%
gather(part_sex, count,-score_range) %>%
separate(part_sex, c("part", "sex")) %>%
print
nxt()
submit()
play()
sat %>%
select(-contains("total")) %>%
gather(part_sex, count,-score_range) %>%
separate(part_sex, c("part", "sex")) %>%
group_by(part, sex)
print
sat %>%
select(-contains("total")) %>%
gather(part_sex, count,-score_range) %>%
separate(part_sex, c("part", "sex")) %>%
group_by(part, sex) %>%
print
sat %>%
select(-contains("total")) %>%
gather(part_sex, count,-score_range) %>%
separate(part_sex, c("part", "sex")) %>%
group_by(part, sex) %>%
mutate(total = sum(count), prop = count / total) %>%
print
nxt()
submit()
play()
sat %>%
select(-contains("total")) %>%
gather(part_sex, count, -score_range) %>%
separate(part_sex, c("part", "sex")) %>%
group_by(part, sex) %>%
mutate(total=sum(count)) %>%
mutate(prop=count/total) %>%
print
nxt()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package="lubridate")
help(package=lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
mdy(25081985)
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment,hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment)
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds =0)
mini
skip()
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(hours(17), minutes(34))
depart <- update(depart,hours(17), minutes(34))
depart <- update(depart,hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes (50)
?with_tz
arrive <- with_tz(arrive,tzone="Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time,arrive,tzone=attr(start,"Asia/Singapore"))
how_long <- new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
library(swirl)
install_from_swirl("Exploratory Data Analysis")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?text
?lines
?lpoints
?points
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
o
p
?splom
?trellis.par.set
?par
?print.trellis
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
setwd("~/GitHub/ExData_Plotting2")
ls
ls()
dir()
source("plo6.R")
source("plot6.R")
source("plot6.R")
plotall()
